[{"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/index.js":"1","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/App.js":"2","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/reportWebVitals.js":"3","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Login.jsx":"4","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Cerificate.jsx":"5","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/CertificateSelector.jsx":"6","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/information.jsx":"7","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/Degrees.js":"8","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Error.jsx":"9"},{"size":500,"mtime":1609366144900,"results":"10","hashOfConfig":"11"},{"size":715,"mtime":1609374867499,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609366144901,"results":"13","hashOfConfig":"11"},{"size":943,"mtime":1609367990340,"results":"14","hashOfConfig":"11"},{"size":1727,"mtime":1609369788240,"results":"15","hashOfConfig":"11"},{"size":12121,"mtime":1609374834644,"results":"16","hashOfConfig":"11"},{"size":3134,"mtime":1609376940182,"results":"17","hashOfConfig":"11"},{"size":1825,"mtime":1609368067186,"results":"18","hashOfConfig":"11"},{"size":907,"mtime":1609367983486,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yabdk6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/index.js",[],["41","42"],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/App.js",["43"],"import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Login from \"./Endpoints/Login\"\nimport Certifcate from \"./Endpoints/Cerificate\"\nimport Error from \"./Endpoints/Error\"\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Router>\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route\n        exact\n        path='/login'\n        component={Login}\n      />\n      <Route\n        exact\n        path='/certificate'\n        render={(props) => <Certifcate {...props}/>}\n      />\n      <Route exact path='/404' component={Error} />\n      <Redirect to='/404' />\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/reportWebVitals.js",[],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Login.jsx",[],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Cerificate.jsx",[],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/CertificateSelector.jsx",["44","45","46"],"import \"../App.css\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useState } from \"react\";\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport getDegrees from \"./Degrees\";\nimport $ from \"jquery\";\n\nconst degrees =[\n  {title:\"Master of Science in Information\", requirements:[\"HCI/UX\", \"Foundations of Data Science\", \"Front End Development\"], mustHave:\"HCI/UX\"},\n  {title:\"Master of Science in Computer Science\", requirements:[\"Computer Science Foundations\", \"Software Architecture\", \"Advanced Computer Science\"], mustHave:\"Advanced Computer Science\"},\n  {title:\"Master of Science in Cyber Security\", requirements:[\"Foundations of Data Science\", \"Software Architecture\", \"Cybersecurity\"], mustHave:\"Cybersecurity\"},\n  {title:\"Master of Science in Technology Leadership\", requirements:[\"Information Systems\", \"Technology Leadership\", \"Computer Science Foundations\"], mustHave:\"Technology Leadership\"},\n  {title:\"Master of Science in Data Science\", requirements:[\"Computer Science Foundations\", \"Foundations of Data Science\", \"AI/Machine Learning\", \"HCI/UX\"], mustHave:\"Foundations of Data Science\"},\n  {title:\"Master of Science in Information Systems\", requirements:[\"Information Systems\", \"Software Architecture\", \"HCI/UX\"], mustHave:\"Information Systems\"},\n  {title:\"Master of Science in MLAI\", requirements:[\"Artificial Intelligence/Machine Learning\", \"Computer Science Foundations\", \"Foundations of Data Science\"], mustHave:\"Artificial Intelligence/Machine Learning\"},\n]\n\nconst getMustHave = (deg) => {\n  return (degrees.filter((f) => (\n      f.title == deg\n  )).reduce((previous, current)=> (current.mustHave + previous), \"\"));\n}\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst certificates = [\n  { title: \"HCI/UX\", preRequisite: [\"\"] },\n  { title: \"Information Systems\", preRequisite: [\"\"] },\n  { title: \"Foundations of Data Science\", preRequisite: [\"\"] },\n  {\n    title: \"Artificial Intelligence/Machine Learning\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Technology Leadership\", preRequisite: [\"\"] },\n  { title: \"Cybersecurity\", preRequisite: [\"Computer Science Foundation\"] },\n  { title: \"Computer Science Foundations\", preRequisite: [\"\"] },\n  {\n    title: \"Advanced Computer Science\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  {\n    title: \"Software Architecture\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Front-End Development\", preRequisite: [\"\"] },\n];\n\n\nfunction CertificateSelector(props) {\n  let selectedCertificate = [\"\", \"\", \"\"];\n  const [selectCerts, setSelectCerts] = useState(['','','']);\n  \n  const handleChange = () => {\n    const certifcateElement = document.getElementsByClassName(\n      \"certificate\" + props.count\n    );\n    for (var i = 0; i < certifcateElement.length; i++) {\n      if (\n        certifcateElement[i].value !== \"Cert1\" &&\n        certifcateElement[i].value !== \"Cert2\" &&\n        certifcateElement[i].value !== \"Cert3\"\n      ) {\n        selectedCertificate[i] = certifcateElement[i].value;\n      } else {\n        selectedCertificate[i] = \"\";\n      }\n      setSelectCerts(selectedCertificate);\n    }\n    handleProceedButton();\n    props.handleSelectCerts(selectedCertificate);\n  };\n\n  const handleProceedButton = () => {\n    var disabled = false;\n    for (var j = 0; j < selectedCertificate.length; j++) {\n      if (selectedCertificate[j] === \"\") disabled = true;\n    }\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\">\n          <tbody>\n            <tr>\n              <td>\n                <select\n                  className={\"certificate\" + props.count}\n                  id=\"certificate1\"\n                  onChange={handleChange}\n                  style={{border: \"2px solid #07294d\"}}\n                >\n                  <option value=\"Cert1\" key=\"Cert1\">\n                    Certifcate 1\n                  </option>\n                  {certificates.map((certificate) => (\n                    <option value={certificate.title} key={certificate.title} disabled={\n                      selectCerts.includes(certificate.title)\n                    }>\n                      {certificate.title}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  className={\"certificate\" + props.count}\n                  id=\"certificate2\"\n                  onChange={handleChange}\n                  style={{border: \"2px solid #07294d\"}}\n                >\n                  <option value=\"Cert2\" key=\"Cert2\">\n                    Certifcate 2\n                  </option>\n                  {certificates.map((certificate) => (\n                    <option value={certificate.title} key={certificate.title} disabled={\n                      selectCerts.includes(certificate.title)\n                    }>\n                      {certificate.title}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  className={\"certificate\" + props.count}\n                  id=\"certificate3\"\n                  onChange={handleChange}\n                  style={{border: \"2px solid #07294d\"}}\n                >\n                  <option value=\"Cert3\" key=\"Cert3\" >\n                    Certifcate 3\n                  </option>\n                  {certificates.map((certificate) => (\n                    <option value={certificate.title} key={certificate.title} disabled={\n                      selectCerts.includes(certificate.title)\n                    }>\n                      {certificate.title}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <Tooltip title=\"Proceed\" arrow>\n                    <button disabled={(selectCerts[0]===\"\" || selectCerts[1]===\"\" || selectCerts[2]===\"\" )?true:false}>\n                      <DoubleArrowIcon  onClick={props.Expander}/>\n                    </button>\n                </Tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction FindPreqs(selectCerts) {\n  return (certificates.filter((m)=>(m.title === selectCerts)).reduce((previous, current)=>{\n    return ((previous.concat(current.preRequisite)))\n  }, [])) \n}\n\nfunction CertificateWrapper(props) {\n  const [vis, setVis] = useState(false);\n  const [selectCerts, setSelectCerts] = useState(['','','']);\n  const [visDegree, setVisDegree] = useState(false);\n  const style={\n    backgroundColor: \"white\",\n    margin: \"20px\",\n  }\n\n  const handleSelectCerts = (CertificateSelectorArr) => {\n    setSelectCerts(CertificateSelectorArr);\n    setVisDegree(false);\n  }\n\n  const Expander = () => {\n    setVisDegree(true);\n    console.log(getDegrees(selectCerts[0], selectCerts[1], selectCerts[2]));\n    setVis(true);\n  }\n\n  return (\n    <div style={style}>\n      <ExpansionPanel expanded={selectCerts[0]!==\"\" && selectCerts[1]!==\"\" && selectCerts[2]!==\"\" && vis} style={{border: \"2px solid #07294d\", borderRadius:\"15px\"}}> \n        <ExpansionPanelSummary\n          expandIcon={(selectCerts[0]===\"\" || selectCerts[1]===\"\" || selectCerts[2]===\"\")? <div></div> :\n          <Tooltip title=\"Show More\" arrow>\n            <button onClick={()=>{setVis(!vis)}} style={{backgroundColor: \"#07294d\"}}>\n              <ExpandMoreIcon />\n            </button>\n          </Tooltip>\n          }\n          style={{backgroundColor: \"white\"}}\n        >\n          <CertificateSelector count={props.count} Expander={Expander} handleSelectCerts={handleSelectCerts}/>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <div>\n          <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\">\n            <tbody>\n              <tr>\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}>\n                  <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\">\n                    <tbody>\n                      <tr class=\"sub-header\">\n                        <th>Pre-reqs</th>\n                      </tr>\n                      <tr><td>\n                      {\n                        FindPreqs(selectCerts[0]).filter((m)=>(m!==\"\")).map((m, index) => {\n                          return <FormControlLabel key = {index}\n                          control={<GreenCheckbox checked={props.hasCSBackground} />}\n                          label={m}/>  \n                        })\n                      }\n                      </td></tr>\n                    </tbody>\n                  </table>\n                </td>\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}> \n                <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\">\n                    <tbody>\n                    <tr class=\"sub-header\">\n                        <th>Pre-reqs</th>\n                      </tr>\n                      <tr><td>\n                      {\n                        FindPreqs(selectCerts[1]).filter((m)=>(m!==\"\")).map((m, index) => {\n                          return <FormControlLabel key = {index}\n                          control={<GreenCheckbox checked={props.hasCSBackground} />}\n                          label={m}/>  \n                        })\n                      }\n                      </td></tr>\n                    </tbody>\n                  </table>\n                </td>\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}> \n                <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\">\n                    <tbody>\n                      <tr class=\"sub-header\">\n                        <th>Pre-reqs</th>\n                      </tr>\n                      <tr><td>\n                      {\n                        FindPreqs(selectCerts[2]).filter((m)=>(m!==\"\")).map((m, index) => {\n                          return <FormControlLabel key = {index}\n                          control={<GreenCheckbox checked={props.hasCSBackground} />}\n                          label={m}/>  \n                        }) \n                      }\n                      </td></tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div style={{display:(visDegree && selectCerts[0]!==\"\" && selectCerts[1]!==\"\" && selectCerts[2]!==\"\")?\n          \"block\":\"none\"}}>\n          <table data-role=\"table\" data-mode=\"reflow\" class=\"ui-responsive\" style={{width: \"865px\" ,border:\"2px solid #07294d\", borderRadius:\"15px\", marginTop: \"15px\", marginLeft: \"50px\"}}>\n            <tbody>\n              <tr><th>Degrees</th></tr>\n              <tr>\n                <td>\n                <ul>\n                  {\n                    getDegrees(selectCerts[0], selectCerts[1], selectCerts[2]).map((deg, index) => {\n                    return <li key={index}> <b>{deg}</b> <i style={{fontSize:\"15px\"}}><b style={{color:\"red\"}}>**</b>(Must Have Certificate: {getMustHave(deg)})</i></li>\n                    })\n                  }\n                </ul>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          </div>\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n//export default CertificateSelector;\nexport default CertificateWrapper;\n","/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/information.jsx",["47","48","49","50","51","52","53"],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Components/Degrees.js",[],"/Users/ibrahimkamal/Desktop/Drexel-Master-Degree-Assistant/src/Endpoints/Error.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":9},{"ruleId":"63","severity":1,"message":"64","line":28,"column":15,"nodeType":"65","messageId":"66","endLine":28,"endColumn":17},{"ruleId":"58","severity":1,"message":"67","line":93,"column":42,"nodeType":"60","messageId":"61","endLine":93,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"68","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":24},{"ruleId":"58","severity":1,"message":"69","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":13},{"ruleId":"58","severity":1,"message":"70","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"71","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":48,"column":28,"nodeType":"65","messageId":"66","endLine":48,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":48,"column":93,"nodeType":"65","messageId":"66","endLine":48,"endColumn":95},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'disabled' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]