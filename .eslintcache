[{"C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\index.js":"1","C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\reportWebVitals.js":"2","C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\App.js":"3","C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\Components\\CertificateSelector.jsx":"4","C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\Components\\Degrees.js":"5"},{"size":517,"mtime":1609228918891,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1609228918892,"results":"8","hashOfConfig":"7"},{"size":1174,"mtime":1609282689658,"results":"9","hashOfConfig":"7"},{"size":12020,"mtime":1609281347331,"results":"10","hashOfConfig":"7"},{"size":1850,"mtime":1609280398548,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10c1khq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\index.js",[],["24","25"],"C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\reportWebVitals.js",[],"C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\App.js",["26"],"C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\Components\\CertificateSelector.jsx",["27","28"],"import \"../App.css\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useState } from \"react\";\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport getDegrees from \"./Degrees\";\r\n\r\nconst degrees =[\r\n  {title:\"Master of Science in Information\", requirements:[\"HCI/UX\", \"Foundations of Data Science\", \"Front End Development\"], mustHave:\"HCI/UX\"},\r\n  {title:\"Master of Science in Computer Science\", requirements:[\"Computer Science Foundations\", \"Software Architecture\", \"Advanced Computer Science\"], mustHave:\"Advanced Computer Science\"},\r\n  {title:\"Master of Science in Cyber Security\", requirements:[\"Foundations of Data Science\", \"Software Architecture\", \"Cybersecurity\"], mustHave:\"Cybersecurity\"},\r\n  {title:\"Master of Science in Technology Leadership\", requirements:[\"Information Systems\", \"Technology Leadership\", \"Computer Science Foundations\"], mustHave:\"Technology Leadership\"},\r\n  {title:\"Master of Science in Data Science\", requirements:[\"Computer Science Foundations\", \"Foundations of Data Science\", \"AI/Machine Learning\", \"HCI/UX\"], mustHave:\"Foundations of Data Science\"},\r\n  {title:\"Master of Science in Information Systems\", requirements:[\"Information Systems\", \"Software Architecture\", \"HCI/UX\"], mustHave:\"Information Systems\"},\r\n  {title:\"Master of Science in MLAI\", requirements:[\"Artificial Intelligence/Machine Learning\", \"Computer Science Foundations\", \"Foundations of Data Science\"], mustHave:\"Artificial Intelligence/Machine Learning\"},\r\n]\r\n\r\nconst getMustHave = (deg) => {\r\n  return (degrees.filter((f) => (\r\n      f.title == deg\r\n  )).reduce((previous, current)=> (current.mustHave + previous), \"\"));\r\n}\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\nconst certificates = [\r\n  { title: \"HCI/UX\", preRequisite: [\"None\"] },\r\n  { title: \"Information Systems\", preRequisite: [\"None\"] },\r\n  { title: \"Foundations of Data Science\", preRequisite: [\"None\"] },\r\n  {\r\n    title: \"Artificial Intelligence/Machine Learning\",\r\n    preRequisite: [\"Computer Science Foundation\"],\r\n  },\r\n  { title: \"Technology Leadership\", preRequisite: [\"None\"] },\r\n  { title: \"Cybersecurity\", preRequisite: [\"Computer Science Foundation\"] },\r\n  { title: \"Computer Science Foundations\", preRequisite: [\"None\"] },\r\n  {\r\n    title: \"Advanced Computer Science\",\r\n    preRequisite: [\"Computer Science Foundation\"],\r\n  },\r\n  {\r\n    title: \"Software Architecture\",\r\n    preRequisite: [\"Computer Science Foundation\"],\r\n  },\r\n  { title: \"Front-End Development\", preRequisite: [\"None\"] },\r\n];\r\n\r\n\r\nfunction CertificateSelector(props) {\r\n  let selectedCertificate = [\"\", \"\", \"\"];\r\n  const [selectCerts, setSelectCerts] = useState(['','','']);\r\n  \r\n  const handleChange = () => {\r\n    const certifcateElement = document.getElementsByClassName(\r\n      \"certificate\" + props.count\r\n    );\r\n    for (var i = 0; i < certifcateElement.length; i++) {\r\n      if (\r\n        certifcateElement[i].value !== \"Cert1\" &&\r\n        certifcateElement[i].value !== \"Cert2\" &&\r\n        certifcateElement[i].value !== \"Cert3\"\r\n      ) {\r\n        selectedCertificate[i] = certifcateElement[i].value;\r\n      } else {\r\n        selectedCertificate[i] = \"\";\r\n      }\r\n      setSelectCerts(selectedCertificate);\r\n    }\r\n    handleProceedButton();\r\n    props.handleSelectCerts(selectedCertificate);\r\n  };\r\n\r\n  const handleProceedButton = () => {\r\n    var disabled = false;\r\n    for (var j = 0; j < selectedCertificate.length; j++) {\r\n      if (selectedCertificate[j] === \"\") disabled = true;\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <select\r\n                  className={\"certificate\" + props.count}\r\n                  id=\"certificate1\"\r\n                  onChange={handleChange}\r\n                  style={{border: \"2px solid #07294d\"}}\r\n                >\r\n                  <option value=\"Cert1\" key=\"Cert1\">\r\n                    Certifcate 1\r\n                  </option>\r\n                  {certificates.map((certificate) => (\r\n                    <option value={certificate.title} key={certificate.title} disabled={\r\n                      selectCerts.includes(certificate.title)\r\n                    }>\r\n                      {certificate.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  className={\"certificate\" + props.count}\r\n                  id=\"certificate2\"\r\n                  onChange={handleChange}\r\n                  style={{border: \"2px solid #07294d\"}}\r\n                >\r\n                  <option value=\"Cert2\" key=\"Cert2\">\r\n                    Certifcate 2\r\n                  </option>\r\n                  {certificates.map((certificate) => (\r\n                    <option value={certificate.title} key={certificate.title} disabled={\r\n                      selectCerts.includes(certificate.title)\r\n                    }>\r\n                      {certificate.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  className={\"certificate\" + props.count}\r\n                  id=\"certificate3\"\r\n                  onChange={handleChange}\r\n                  style={{border: \"2px solid #07294d\"}}\r\n                >\r\n                  <option value=\"Cert3\" key=\"Cert3\" >\r\n                    Certifcate 3\r\n                  </option>\r\n                  {certificates.map((certificate) => (\r\n                    <option value={certificate.title} key={certificate.title} disabled={\r\n                      selectCerts.includes(certificate.title)\r\n                    }>\r\n                      {certificate.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <Tooltip title=\"Proceed\" arrow>\r\n                    <button disabled={(selectCerts[0]===\"\" || selectCerts[1]===\"\" || selectCerts[2]===\"\" )?true:false}>\r\n                      <DoubleArrowIcon  onClick={props.Expander}/>\r\n                    </button>\r\n                </Tooltip>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FindPreqs(selectCerts) {\r\n  return (certificates.filter((m)=>(m.title === selectCerts)).reduce((previous, current)=>{\r\n    return ((previous.concat(current.preRequisite)))\r\n  }, [])) \r\n}\r\n\r\nfunction CertificateWrapper(props) {\r\n  const [vis, setVis] = useState(false);\r\n  const [selectCerts, setSelectCerts] = useState(['','','']);\r\n  const [visDegree, setVisDegree] = useState(false);\r\n  const style={\r\n    backgroundColor: \"white\",\r\n    margin: \"20px\",\r\n  }\r\n\r\n  const handleSelectCerts = (CertificateSelectorArr) => {\r\n    setSelectCerts(CertificateSelectorArr);\r\n    setVisDegree(false);\r\n  }\r\n\r\n  const Expander = () => {\r\n    setVisDegree(true);\r\n    console.log(getDegrees(selectCerts[0], selectCerts[1], selectCerts[2]));\r\n    setVis(true);\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      <ExpansionPanel expanded={selectCerts[0]!==\"\" && selectCerts[1]!==\"\" && selectCerts[2]!==\"\" && vis} style={{border: \"2px solid #07294d\", borderRadius:\"15px\"}}> \r\n        <ExpansionPanelSummary\r\n          expandIcon={(selectCerts[0]===\"\" || selectCerts[1]===\"\" || selectCerts[2]===\"\")? <div></div> :\r\n          <Tooltip title=\"Show More\" arrow>\r\n            <button onClick={()=>{setVis(!vis)}} style={{backgroundColor: \"#07294d\"}}>\r\n              <ExpandMoreIcon />\r\n            </button>\r\n          </Tooltip>\r\n          }\r\n          style={{backgroundColor: \"white\"}}\r\n        >\r\n          <CertificateSelector count={props.count} Expander={Expander} handleSelectCerts={handleSelectCerts}/>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr class=\"sub-header\">\r\n                        <th>Pre-reqs</th>\r\n                      </tr>\r\n                      <tr><td>\r\n                      {\r\n                        FindPreqs(selectCerts[0]).filter((m)=>(m!==\"\")).map((m, index) => {\r\n                          return <FormControlLabel key = {index}\r\n                          control={<GreenCheckbox checked={true} />}\r\n                          label={m}/>  \r\n                        })\r\n                      }\r\n                      </td></tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}> \r\n                <table>\r\n                    <tbody>\r\n                    <tr class=\"sub-header\">\r\n                        <th>Pre-reqs</th>\r\n                      </tr>\r\n                      <tr><td>\r\n                      {\r\n                        FindPreqs(selectCerts[1]).filter((m)=>(m!==\"\")).map((m, index) => {\r\n                          return <FormControlLabel key = {index}\r\n                          control={<GreenCheckbox checked={true} />}\r\n                          label={m}/>  \r\n                        })\r\n                      }\r\n                      </td></tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n                <td style={{width: \"250px\", border:\"2px solid #07294d\", borderRadius:\"15px\"}}> \r\n                <table>\r\n                    <tbody>\r\n                      <tr class=\"sub-header\">\r\n                        <th>Pre-reqs</th>\r\n                      </tr>\r\n                      <tr><td>\r\n                      {\r\n                        FindPreqs(selectCerts[2]).filter((m)=>(m!==\"\")).map((m, index) => {\r\n                          return <FormControlLabel key = {index}\r\n                          control={<GreenCheckbox checked={true} />}\r\n                          label={m}/>  \r\n                        }) \r\n                      }\r\n                      </td></tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div style={{display:(visDegree && selectCerts[0]!==\"\" && selectCerts[1]!==\"\" && selectCerts[2]!==\"\")?\r\n          \"block\":\"none\"}}>\r\n          <table style={{width: \"865px\" ,border:\"2px solid #07294d\", borderRadius:\"15px\", marginTop: \"15px\", marginLeft: \"50px\"}}>\r\n            <tbody>\r\n              <tr><th>Degrees</th></tr>\r\n              <tr>\r\n                <td>\r\n                <ul>\r\n                  {\r\n                    getDegrees(selectCerts[0], selectCerts[1], selectCerts[2]).map((deg, index) => {\r\n                    return <li key={index}> <b>{deg}</b> <i style={{fontSize:\"15px\"}}><b style={{color:\"red\"}}>**</b>(Must Have Certificate: {getMustHave(deg)})</i></li>\r\n                    })\r\n                  }\r\n                </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n//export default CertificateSelector;\r\nexport default CertificateWrapper;\r\n","C:\\Users\\hg387\\Downloads\\Web Design\\CCI-Web-Deign-Competiton\\src\\Components\\Degrees.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":16,"nodeType":"35","messageId":"36","endLine":3,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":27,"column":15,"nodeType":"39","messageId":"40","endLine":27,"endColumn":17},{"ruleId":"33","severity":1,"message":"41","line":92,"column":42,"nodeType":"35","messageId":"36","endLine":92,"endColumn":50},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'disabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]