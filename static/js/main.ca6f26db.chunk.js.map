{"version":3,"sources":["Components/information.jsx","Endpoints/Login.jsx","Components/Degrees.js","Components/CertificateSelector.jsx","Components/CertificateWrapper.jsx","Endpoints/Cerificate.jsx","Endpoints/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","userDatabse","userid","password","hasCSBackground","SignIn","props","classes","history","useHistory","Container","component","maxWidth","CssBaseline","className","id","noValidate","TextField","variant","required","fullWidth","label","name","autoFocus","Button","type","color","onClick","document","getElementsByTagName","value","window","alert","tmp","filter","f","reduce","previous","current","push","pathname","state","Login","style","Grid","container","item","xs","src","alt","degrees","title","requirements","mustHave","getDegrees","cert1","cert2","cert3","degreesObtained","i","length","includes","certificates","preRequisite","CertificateSelector","selectedCertificate","useState","selectCerts","setSelectCerts","handleChange","certifcateElement","getElementsByClassName","count","handleProceedButton","handleSelectCerts","j","onChange","map","certificate","index","disabled","Tooltip","arrow","Expander","getMustHave","deg","GreenCheckbox","withStyles","root","green","checked","Checkbox","FindPreqs","m","concat","CertificateWrapper","vis","setVis","visDegree","setVisDegree","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","CertificateSelectorArr","ExpansionPanelDetails","FormControlLabel","control","textAlign","fontSize","Certifcate","setCount","fontWeight","Array","keys","c","location","Error","App","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca6f26db.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router\";\nimport \"../App.css\"\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst userDatabse = [\n  {userid:\"ik363\", password:\"123456\", hasCSBackground:true},\n  {userid:\"hv59\", password:\"123456\", hasCSBackground:false},\n  {userid:\"hg387\", password:\"123456\", hasCSBackground:true},\n]\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  let hasCSBackground = false\n  const handleSubmit = () =>{\n    if(document.getElementsByTagName(\"input\")[0].value === \"\" || document.getElementsByTagName(\"input\")[1].value === \"\"){\n        window.alert(\"Fill out the form\")\n    }\n    else{\n      let tmp = userDatabse.filter((f) => {\n          return (f.userid === document.getElementsByTagName(\"input\")[0].value && f.password === document.getElementsByTagName(\"input\")[1].value)\n        }).reduce((previous, current) => {\n          return (current.hasCSBackground)\n        }, \"\");\n\n      if (tmp !== \"\") {\n        hasCSBackground = tmp\n        history.push({\n          pathname:  \"/certificate\",\n          state: {\n            hasCSBackground: hasCSBackground\n          } \n       });\n      }\n      else{\n        window.alert(\"User Name OR Password is not correct\");\n      }\n    }\n}\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper} id=\"bg\">\n        <h1>Drexel Connect</h1>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"User ID\"\n            name=\"username\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            autoFocus\n          />\n        </form>\n        <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport SignIn from \"../Components/information\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../App.css\"\n\nfunction Login() {\n  return (\n    <div>\n      <div style={{ backgroundColor: \"#07294d\" }}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <img\n              src=\"https://www.cs.drexel.edu/~dmz38/CCILogo.png\"\n              alt=\"Drexel Logo\"\n              className=\"logo\"\n              style={{ marginTop: \"5px\", maxWidth: \"100%\" }}\n            ></img>\n          </Grid>\n        </Grid>\n      </div>\n      <div>\n      <SignIn />\n      </div>\n    )\n    </div>\n  );\n}\n\nexport default Login;\n","const degrees =[\n\n    {title:\"Master of Science in Information\", requirements:[\"HCI/UX\", \"Foundations of Data Science\", \"Front End Development\"], mustHave:\"HCI/UX\"},\n    {title:\"Master of Science in Computer Science\", requirements:[\"Computer Science Foundations\", \"Software Architecture\", \"Advanced Computer Science\"], mustHave:\"Advanced Computer Science\"},\n    {title:\"Master of Science in Cyber Security\", requirements:[\"Foundations of Data Science\", \"Software Architecture\", \"Cybersecurity\"], mustHave:\"Cybersecurity\"},\n    {title:\"Master of Science in Technology Leadership\", requirements:[\"Information Systems\", \"Technology Leadership\", \"Computer Science Foundations\"], mustHave:\"Technology Leadership\"},\n    {title:\"Master of Science in Data Science\", requirements:[\"Computer Science Foundations\", \"Foundations of Data Science\", \"AI/Machine Learning\", \"HCI/UX\"], mustHave:\"Foundations of Data Science\"},\n    {title:\"Master of Science in Information Systems\", requirements:[\"Information Systems\", \"Software Architecture\", \"HCI/UX\"], mustHave:\"Information Systems\"},\n    {title:\"Master of Science in MLAI\", requirements:[\"Artificial Intelligence/Machine Learning\", \"Computer Science Foundations\", \"Foundations of Data Science\"], mustHave:\"Artificial Intelligence/Machine Learning\"},\n    \n]\n\nconst getDegrees = (cert1, cert2, cert3) =>{\n    let degreesObtained = []\n    for(var i=0; i<degrees.length; i++){\n        if(degrees[i].requirements.includes(cert1) || degrees[i].requirements.includes(cert2) || degrees[i].requirements.includes(cert3)){\n            if(!degreesObtained.includes(degrees[i].title) && (cert1===degrees[i].mustHave || cert2===degrees[i].mustHave || cert3===degrees[i].mustHave))\n            degreesObtained.push(degrees[i].title)\n        }\n    }\n    return degreesObtained\n}\n\n\n\nexport default getDegrees;\n\n","import \"../App.css\";\nimport \"../Styles/certificate.css\"\nimport \"../Styles/certificateWrapper.css\"\n\nimport { useState } from \"react\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst certificates = [\n  { title: \"HCI/UX\", preRequisite: [\"\"] },\n  { title: \"Information Systems\", preRequisite: [\"\"] },\n  { title: \"Foundations of Data Science\", preRequisite: [\"\"] },\n  {\n    title: \"Artificial Intelligence/Machine Learning\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Technology Leadership\", preRequisite: [\"\"] },\n  {\n    title: \"Cybersecurity\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Computer Science Foundations\", preRequisite: [\"\"] },\n  {\n    title: \"Advanced Computer Science\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  {\n    title: \"Software Architecture\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Front-End Development\", preRequisite: [\"\"] },\n];\n\nfunction CertificateSelector(props) {\n  let selectedCertificate = [\"\", \"\", \"\"];\n  const [selectCerts, setSelectCerts] = useState([\"\", \"\", \"\"]);\n\n  const handleChange = () => {\n    const certifcateElement = document.getElementsByClassName(\n      \"certificate\" + props.count\n    );\n    for (var i = 0; i < certifcateElement.length; i++) {\n      if (\n        certifcateElement[i].value !== \"Cert1\" &&\n        certifcateElement[i].value !== \"Cert2\" &&\n        certifcateElement[i].value !== \"Cert3\"\n      ) {\n        selectedCertificate[i] = certifcateElement[i].value;\n      } else {\n        selectedCertificate[i] = \"\";\n      }\n      setSelectCerts(selectedCertificate);\n    }\n    handleProceedButton();\n    props.handleSelectCerts(selectedCertificate);\n  };\n\n  const handleProceedButton = () => {\n    var disabled = false;\n    for (var j = 0; j < selectedCertificate.length; j++) {\n      if (selectedCertificate[j] === \"\") disabled = true;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <select\n              className={\"certificate\" + props.count}\n              id=\"certificate1\"\n              onChange={handleChange}\n            >\n              <option value=\"Cert1\" key=\"Cert1\">\n                Certifcate 1\n              </option>\n              {certificates.map((certificate, index) => (\n                <option\n                  value={certificate.title}\n                  key={index}\n                  disabled={selectCerts.includes(certificate.title)}\n                >\n                  {certificate.title}\n                </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={3}>\n            <select\n              className={\"certificate\" + props.count}\n              id=\"certificate2\"\n              onChange={handleChange}\n            >\n              <option value=\"Cert2\" key=\"Cert2\">\n                Certifcate 2\n              </option>\n              {certificates.map((certificate, index) => (\n                <option\n                  value={certificate.title}\n                  key={index}\n                  disabled={selectCerts.includes(certificate.title)}\n                >\n                  {certificate.title}\n                </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={3}>\n            <select\n              className={\"certificate\" + props.count}\n              id=\"certificate3\"\n              onChange={handleChange}\n            >\n              <option value=\"Cert3\" key=\"Cert3\">\n                Certifcate 3\n              </option>\n              {certificates.map((certificate, index) => (\n                <option\n                  value={certificate.title}\n                  key={index}\n                  disabled={selectCerts.includes(certificate.title)}\n                >\n                  {certificate.title}\n                </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={3}>\n            <Tooltip title=\"Get Degrees\" arrow>\n              <button\n                disabled={\n                  selectCerts[0] === \"\" ||\n                  selectCerts[1] === \"\" ||\n                  selectCerts[2] === \"\"\n                    ? true\n                    : false\n                }\n                onClick={props.Expander} \n              >\n                <DoubleArrowIcon/>\n              </button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default CertificateSelector;\n","import \"../App.css\";\nimport \"../Styles/certificate.css\"\nimport \"../Styles/certificateWrapper.css\"\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useState } from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport getDegrees from \"./Degrees\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CertificateSelector from \"./CertificateSelector\"\n\nconst degrees = [\n  {\n    title: \"Master of Science in Information\",\n    requirements: [\n      \"HCI/UX\",\n      \"Foundations of Data Science\",\n      \"Front End Development\",\n    ],\n    mustHave: \"HCI/UX\",\n  },\n  {\n    title: \"Master of Science in Computer Science\",\n    requirements: [\n      \"Computer Science Foundations\",\n      \"Software Architecture\",\n      \"Advanced Computer Science\",\n    ],\n    mustHave: \"Advanced Computer Science\",\n  },\n  {\n    title: \"Master of Science in Cyber Security\",\n    requirements: [\n      \"Foundations of Data Science\",\n      \"Software Architecture\",\n      \"Cybersecurity\",\n    ],\n    mustHave: \"Cybersecurity\",\n  },\n  {\n    title: \"Master of Science in Technology Leadership\",\n    requirements: [\n      \"Information Systems\",\n      \"Technology Leadership\",\n      \"Computer Science Foundations\",\n    ],\n    mustHave: \"Technology Leadership\",\n  },\n  {\n    title: \"Master of Science in Data Science\",\n    requirements: [\n      \"Computer Science Foundations\",\n      \"Foundations of Data Science\",\n      \"AI/Machine Learning\",\n      \"HCI/UX\",\n    ],\n    mustHave: \"Foundations of Data Science\",\n  },\n  {\n    title: \"Master of Science in Information Systems\",\n    requirements: [\"Information Systems\", \"Software Architecture\", \"HCI/UX\"],\n    mustHave: \"Information Systems\",\n  },\n  {\n    title: \"Master of Science in MLAI\",\n    requirements: [\n      \"Artificial Intelligence/Machine Learning\",\n      \"Computer Science Foundations\",\n      \"Foundations of Data Science\",\n    ],\n    mustHave: \"Artificial Intelligence/Machine Learning\",\n  },\n];\n\nconst getMustHave = (deg) => {\n  return degrees\n    .filter((f) => f.title === deg)\n    .reduce((previous, current) => current.mustHave + previous, \"\");\n};\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst certificates = [\n  { title: \"HCI/UX\", preRequisite: [\"\"] },\n  { title: \"Information Systems\", preRequisite: [\"\"] },\n  { title: \"Foundations of Data Science\", preRequisite: [\"\"] },\n  {\n    title: \"Artificial Intelligence/Machine Learning\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Technology Leadership\", preRequisite: [\"\"] },\n  {\n    title: \"Cybersecurity\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Computer Science Foundations\", preRequisite: [\"\"] },\n  {\n    title: \"Advanced Computer Science\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  {\n    title: \"Software Architecture\",\n    preRequisite: [\"Computer Science Foundation\"],\n  },\n  { title: \"Front-End Development\", preRequisite: [\"\"] },\n];\n\nfunction FindPreqs(selectCerts) {\n    return certificates\n      .filter((m) => m.title === selectCerts)\n      .reduce((previous, current) => {\n        return previous.concat(current.preRequisite);\n      }, []);\n  }\n  \n  function CertificateWrapper(props) {\n    const [vis, setVis] = useState(false);\n    const [selectCerts, setSelectCerts] = useState([\"\", \"\", \"\"]);\n    const [visDegree, setVisDegree] = useState(false);\n    const style = {\n      backgroundColor: \"white\",\n      margin: \"20px\",\n    };\n  \n    const handleSelectCerts = (CertificateSelectorArr) => {\n      setSelectCerts(CertificateSelectorArr);\n      setVisDegree(false);\n    };\n  \n    const Expander = () => {\n      setVisDegree(true);\n      setVis(true);\n    };\n\n    return (\n      <div style={style}>\n        <ExpansionPanel\n          expanded={\n            selectCerts[0] !== \"\" &&\n            selectCerts[1] !== \"\" &&\n            selectCerts[2] !== \"\" &&\n            vis\n          }\n          id=\"expansion-panel\"\n        >\n          <ExpansionPanelSummary\n            id=\"expand-summary\"\n            expandIcon={\n              selectCerts[0] === \"\" ||\n              selectCerts[1] === \"\" ||\n              selectCerts[2] === \"\" ? (\n                <div></div>\n              ) : (\n                <Tooltip title=\"Show More\" arrow>\n                  <button\n                    onClick={() => {\n                      setVis(!vis);\n                    }}\n                    id=\"expand-button\"\n                  >\n                    <ExpandMoreIcon />\n                  </button>\n                </Tooltip>\n              )\n            }\n          >\n            <CertificateSelector\n              count={props.count}\n              Expander={Expander}\n              handleSelectCerts={handleSelectCerts}\n            />\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div>\n              <Grid container spacing={3}>\n                <Grid\n                  item\n                  xs={3}\n                  id=\"prereq-container1\"\n                >\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    <p><b>Pre-Requisite</b> - <i>Certficate 1</i></p>\n                    </Grid>\n                    {FindPreqs(selectCerts[0])\n                      .filter((m) => m !== \"\")\n                      .map((m, index) => {\n                        return (\n                          <div>\n                            <Grid item xs={12}>\n                              {FindPreqs(selectCerts[0])\n                                .filter((m) => m !== \"\")\n                                .map((m, index) => {\n                                  return (\n                                    <FormControlLabel\n                                      key={index}\n                                      control={\n                                        <GreenCheckbox\n                                          checked={props.hasCSBackground}\n                                        />\n                                      }\n                                      label={m}\n                                    />\n                                  );\n                                })}\n                            </Grid>\n                          </div>\n                        );\n                      })}\n                  </Grid>\n                </Grid>\n                <Grid\n                  item\n                  xs={3}\n                  id=\"prereq-container2\"\n                >\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    <p><b>Pre-Requisite</b> - <i>Certficate 2</i></p>\n                    </Grid>\n                    {FindPreqs(selectCerts[1])\n                      .filter((m) => m !== \"\")\n                      .map((m, index) => {\n                        return (\n                          <div>\n                            <Grid item xs={12}>\n                              {FindPreqs(selectCerts[1])\n                                .filter((m) => m !== \"\")\n                                .map((m, index) => {\n                                  return (\n                                    <FormControlLabel\n                                      key={index}\n                                      control={\n                                        <GreenCheckbox\n                                          checked={props.hasCSBackground}\n                                        />\n                                      }\n                                      label={m}\n                                    />\n                                  );\n                                })}\n                            </Grid>\n                          </div>\n                        );\n                      })}\n                  </Grid>\n                </Grid>\n                <Grid\n                  item\n                  xs={3}\n                  id=\"prereq-container3\"\n                >\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <p><b>Pre-Requisite</b> - <i>Certficate 3</i></p>\n                    </Grid>\n                    {FindPreqs(selectCerts[2])\n                      .filter((m) => m !== \"\")\n                      .map((m, index) => {\n                        return (\n                          <div>\n                            <Grid item xs={12}>\n                              {FindPreqs(selectCerts[2])\n                                .filter((m) => m !== \"\")\n                                .map((m, index) => {\n                                  return (\n                                    <FormControlLabel\n                                      key={index}\n                                      control={\n                                        <GreenCheckbox\n                                          checked={props.hasCSBackground}\n                                        />\n                                      }\n                                      label={m}\n                                    />\n                                  );\n                                })}\n                            </Grid>\n                          </div>\n                        );\n                      })}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <div\n              id=\"show-degree\"\n                style={{\n                  display:\n                    visDegree &&\n                    selectCerts[0] !== \"\" &&\n                    selectCerts[1] !== \"\" &&\n                    selectCerts[2] !== \"\"\n                      ? \"block\"\n                      : \"none\",\n                }}\n              >\n                <Grid\n                  container\n                  spacing={3}\n                  style={{\n                    display:\n                      visDegree &&\n                      selectCerts[0] !== \"\" &&\n                      selectCerts[1] !== \"\" &&\n                      selectCerts[2] !== \"\"\n                        ? \"block\"\n                        : \"none\",\n                  }}\n                >\n                  <Grid item xs={12}>\n                    <div style={{ textAlign: \"center\" }}>\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      <b>\n                        <i>Degrees which can be obtained</i>\n                      </b>\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ul>\n                      {getDegrees(\n                        selectCerts[0],\n                        selectCerts[1],\n                        selectCerts[2]\n                      ).map((deg, index) => {\n                        return (\n                          <li key={index}>\n                            {\" \"}\n                            <b>{deg}</b>{\" \"}\n                            <i style={{ fontSize: \"15px\" }}>\n                              <b style={{ color: \"red\" }}>**</b>(Must Have\n                              Certificate: {getMustHave(deg)})\n                            </i>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n  export default CertificateWrapper;","import \"../App.css\";\nimport CertificateWrapper from \"../Components/CertificateWrapper\";\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useHistory } from \"react-router\";\n\nfunction Certifcate(props) {\n    const [count, setCount] = useState(1);\n  \n    const onClick = () => {\n      setCount(count + 1);\n    };\n    const history = useHistory();\n    return (\n      <div className=\"App\">\n        <div style={{ backgroundColor: \"#07294d\" }}>\n          <Grid container spacing={4}>\n            <Grid item xs={4}>\n              <img\n                src=\"https://www.cs.drexel.edu/~dmz38/CCILogo.png\"\n                alt=\"Drexel Logo\"\n                className=\"logo\"\n                style={{ marginTop: \"5px\", maxWidth: \"100%\" }}\n              ></img>\n            </Grid>\n            <Grid item xs={4}>\n              <div\n                style={{\n                  fontWeight: \"bold\",\n                  fontSize: \"25px\",\n                  color: \"white\",\n                  marginTop: \"20px\",\n                }}\n              >\n                Welcome To Degree Assistant\n              </div>\n            </Grid>\n            <Grid item xs={4}>\n              <Tooltip title=\"Add another certificate selector component\" arrow>\n                <button onClick={onClick} style={{ marginTop: \"20px\" }}>\n                  <AddIcon />\n                </button>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </div>\n        {[...Array(count).keys()].map((c, index) => {\n          return <CertificateWrapper count={index} key={index} hasCSBackground={props.location.state ? props.location.state.hasCSBackground :  history.push({\n            pathname:  \"/\", \n         })}/>;\n        })}\n      </div>\n    );\n}\n\nexport default Certifcate;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../App.css\"\n\nfunction Error() {\n  return (\n    <div>\n      <div style={{ backgroundColor: \"#07294d\" }}>\n        <Grid container spacing={4}>\n          <Grid item xs={4}>\n            <img\n              src=\"https://www.cs.drexel.edu/~dmz38/CCILogo.png\"\n              alt=\"Drexel Logo\"\n              className=\"logo\"\n              style={{ marginTop: \"5px\", maxWidth: \"100%\" }}\n            ></img>\n          </Grid>\n          <Grid item xs={4}>\n            <div\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"25px\",\n                color: \"white\",\n                marginTop: \"20px\",\n              }}\n            >\n              Welcome To Degree Assistant\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n      <h1>404 Not Found</h1>)\n    </div>\n  );\n}\n\nexport default Error;\n","import \"./App.css\";\nimport React from \"react\";\nimport Login from \"./Endpoints/Login\"\nimport Certifcate from \"./Endpoints/Cerificate\"\nimport Error from \"./Endpoints/Error\"\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Router>\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route\n        exact\n        path='/login'\n        component={Login}\n      />\n      <Route\n        exact\n        path='/certificate'\n        render={(props) => <Certifcate {...props}/>}\n      />\n      <Route exact path='/404' component={Error} />\n      <Redirect to='/404' />\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}